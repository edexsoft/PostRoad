<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- 自动扫描 -->
    <!-- <context:component-scan base-package="com.aheizi" /> -->
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:mybatis/jdbc-mysql.properties" />
    </bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        
        <!-- <property name="removeAbandoned" value="true"></property>
        <property name="removeAbandonedTimeout" value="30"></property>
        <property name="validationQuery" value="SELECT 1"></property> -->
    </bean>

    <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
	    <property name="url" value="${jdbc_url}" />  
	    <property name="username" value="${jdbc_user}" />  
	    <property name="password" value="${jdbc_password}" />  
	       
	    <property name="filters" value="stat" />  
	   
	    <property name="maxActive" value="20" />  
	    <property name="initialSize" value="1" />  
	    <property name="maxWait" value="60000" />  
	    <property name="minIdle" value="1" />  
	   
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	   
	    <property name="validationQuery" value="SELECT 'x'" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	       
	    <property name="poolPreparedStatements" value="true" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />  
	</bean> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- <property name="configLocation" value="classpath:config/mybatis-config.xml" /> -->
		<!-- <property name="mapperLocations" value="classpath:com/aheizi/mapping/*.xml"></property> -->
		<!-- <property name="mapperLocations" value="classpath*:config/mappers/**/*.xml" /> -->
		<!-- <property name="mapperLocations">
			<list>
				<value>classpath:mybatis_mapper/*.xml</value>
			</list>
		</property> -->
		<!-- 
		<property name="typeAliasesPackage" value="com.github.ichenkaihua.model"/>
		-->
	</bean>
	
	

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- <aop:aspectj-autoproxy /> -->

	<!-- <aop:config>
		<aop:pointcut id="appService"
			expression="execution(* com.github.ichenkaihua.service..*Service*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="appService" />
	</aop:config> --> 

	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="sava*" />

		</tx:attributes>
	</tx:advice> -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property 
        	name="basePackage" 
        	value="
        		com.edexsoft.framework.security.mapper,
        		com.edexsoft.postroad.domain.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类 -->
		<!-- <property name="markerInterface" value="com.isea533.mybatis.util.MyMapper"/>-->
		<!-- 通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口 -->
		<!--<property name="properties">
            <value>
                mappers=org.mybatis.mapper.common.Mapper
            </value>
        </property>-->
    </bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" /> 
    

</beans>